import type { Metadata } from "next";
import localFont from "next/font/local";

import "react-dates/lib/css/_datepicker.css";
import "rc-slider/assets/index.css";
// STYLE
import "./styles/index.scss";
import "./globals.css";
import "./fonts/line-awesome-1.3.0/css/line-awesome.css";
import "react-dates/initialize";

import SiteHeader from "@app/containers/SiteHeader";
import Footer from "./shared/Footer/Footer";
import { createClient } from "./lib/supabase/server";
import { Database } from "./types/database.types";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Votik",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const userDetails: {
    user: Database["public"]["Tables"]["users"]["Row"] | null;
  } = {
    user: null,
  };

  const supabase = createClient();

  const { data: authData, error: authError } = await supabase.auth.getUser();

  if (!authError && authData?.user) {
    // Fetch the user details
    const { data, error } = await supabase
      .from("users") // Table name
      .select("*") // Select all columns (or specify specific columns)
      .eq("id", authData.user.id); // Use 'eq' to filter by primary key value

    if (!error && data?.[0]) {
      userDetails.user = data[0];
    }
  }

  console.log({ userDetails });

  return (
    <html lang="en" className="dark">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <div className="bg-white text-base dark:bg-neutral-900 text-neutral-900 dark:text-neutral-200">
          <SiteHeader user={userDetails.user} />
          {children}
          <Footer />
        </div>
      </body>
    </html>
  );
}
